version: '3.9'

services:
  ssh-server-backend:
    image: ghcr.io/pgmystery/ssh-tunnel/example-ssh-server-backend:latest
    hostname: backend
    ports:
      - "8090:80"  # To show, that it is not accessible from "outside"
      - "8091:81"  # To show, that it is not accessible from "outside"
      - "2222:22"  # OPTIONAL: SSH port only if you want to connect to it from your host. Not needed in the docker-compose file
    networks:
      - ssh-tunnel-backend
    healthcheck:
      test: netstat -an | grep 22 > /dev/null; if [ 0 != $? ]; then exit 1; fi;
      interval: 5s
      retries: 5
      start_period: 20s
      timeout: 1s

  frontend:
    image: nginx:latest
    depends_on:
      - ssh-tunnel
    ports:
      - "8080:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/templates/default.conf.template
      - ./frontend/html:/usr/share/nginx/html
    networks:
      - ssh-tunnel-frontend

  ssh-tunnel:
    image: pgmystery/ssh-tunnel:latest
    hostname: ssh-tunnel
    command: -NL *:6968:0.0.0.0:81
    depends_on:
      ssh-server-backend:
        condition: service_healthy
    secrets:
      - ssh_key_file
      - ssh_key_passphrase_file
    ports:
      - "8081:6969"  # To show that you can access the local ports over you docker host
      - "8082:6968"  # To show that you can access the local ports over you docker host
    environment:
      REMOTE_PORT: 80  # The port of the service you want to connect
      SSH_HOST: backend  # The remote-host name/ip
      SSH_KEY_FILE: /run/secrets/ssh_key_file  # The location of the private ssh-key file in the container
      SSH_KEY_PASSPHRASE_FILE: /run/secrets/ssh_key_passphrase_file  # The location in the container of the secret-file
      SSH_PORT: 22  # The ssh-port of the remote server [DEFAULT: 22]
      SSH_USERNAME: root  # The ssh-username of the remote server
    networks:
      - ssh-tunnel-backend
      - ssh-tunnel-frontend

secrets:
  ssh_key_file:
    file: "./secrets/id_ed25519"
  ssh_key_passphrase_file:
    file: "./secrets/passphrase"

networks:
  ssh-tunnel-frontend:
  ssh-tunnel-backend:
